# Generated by Django 3.1.1 on 2020-10-29 15:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('equipment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Firefighter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=200, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=200, verbose_name='Nachname')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-Mail')),
                ('staff_id', models.IntegerField(blank=True, null=True)),
                ('joined', models.DateField(auto_now_add=True, null=True)),
                ('active_since', models.DateField(default=django.utils.timezone.now)),
                ('street', models.CharField(max_length=200)),
                ('zip', models.IntegerField()),
                ('city', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('key', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='equipment.key')),
                ('locker', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='equipment.locker')),
                ('pager', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='equipment.pager')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'permissions': [
                    ('view_all', 'Get an overview of all firefighters'),
                    ('view_detail', 'Get detailed information about a firefighter')
                ]
            },
        ),
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryOfDriverLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Honor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sorting_order', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ['sorting_order'],
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sorting_order', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['sorting_order'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sorting_order', models.IntegerField()),
            ],
            options={
                'ordering': ['sorting_order'],
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RoleAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('firefighter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personal_data.authority')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personal_data.role')),
            ],
        ),
        migrations.CreateModel(
            name='RankAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('firefighter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to=settings.AUTH_USER_MODEL)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personal_data.authority')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personal_data.rank')),
            ],
        ),
        migrations.CreateModel(
            name='HonorAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('firefighter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('honor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personal_data.honor')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personal_data.authority')),
            ],
        ),
        migrations.CreateModel(
            name='DriverLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_id', models.CharField(max_length=11)),
                ('issue_date', models.DateField()),
                ('expiration_date', models.DateField()),
                ('categories', models.ManyToManyField(help_text='Select a vehicle categories the driver licenses covers', to='personal_data.CategoryOfDriverLicense')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='firefighter',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='personal_data.userstatus'),
        ),
        migrations.AddField(
            model_name='firefighter',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
